package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"pawpawchat/api/graph/model"
	"pawpawchat/generated/graphgen"
	"strconv"
)

// User is the resolver for the user field.
func (r *queryResolver) User(ctx context.Context, identifier graphgen.UserIdentifier) (*graphgen.User, error) {
	id, err := strconv.ParseUint(*identifier.ID, 10, 0)
	if err != nil {
		return nil, err
	}

	user, err := r.ProfileRepository.GetByID(ctx, id)
	if err != nil {
		return nil, err
	}

	return &graphgen.User{
		Credentials: &graphgen.UserCredentials{Email: user.Credentials.Email},
		Biography: &graphgen.UserBiography{
			Firstname:  user.Biography.FirstName,
			Secondname: user.Biography.SecondName,
			Birthday:   &model.Date{Time: user.Biography.Birthday},
			Age:        &user.Biography.Age,
		}}, nil
}

// Query returns graphgen.QueryResolver implementation.
func (r *Resolver) Query() graphgen.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
